package com.jingfm.api.business;import java.util.Map;import org.json.JSONException;import com.jingfm.api.ApiUrlDefine;import com.jingfm.api.CommonHttpApi;import com.jingfm.api.ResultResponse;import com.jingfm.api.builder.CommonBuilder;import com.jingfm.api.builder.FunctionResultBuilder;import com.jingfm.api.model.UserPersonalDataDTO;import com.jingfm.api.model.UserPersonalSettingDTO;public class UserPersonalRequestApi {		/**	 * 用户相关个人数据提取	 * @param params uid ouid st ps	 * @return	 */	public static ResultResponse<UserPersonalDataDTO> userFetchPersonal(Map<?, ?> params){		ResultResponse<UserPersonalDataDTO> response = null;		/*return FunctionResultBuilder.requestResultResponse(url, params, LoginDataDTO.class);*/		String jsonstring = CommonHttpApi.post(ApiUrlDefine.getApiUrl(ApiUrlDefine.Normal.UserPersonal.FetchPersonal),params);		//System.out.println("~~~~:"+jsonstring);		if(jsonstring != null){			try {				response = FunctionResultBuilder.buildUserPersonalDataDTO(jsonstring);//				if(response.isSuccess()){//					Map<Object, Object> params_pt = new HashMap<Object, Object>(); //					params_pt.put("uid", params.get("uid"));//					params_pt.put("ouid", params.get("ouid"));//					params_pt.put("st", params.get("st"));//					params_pt.put("ps", params.get("ps"));//					ResultResponse<ListResult<TickerDTO>> response_pt = fetchPersonalLoveTickers(params_pt);//					List<TickerDTO> pts = response_pt.getResult().getItems();//					response.getResult().setTickers(pts);//				}				return response;			} catch (JSONException e) {				e.printStackTrace();			}		}		return CommonBuilder.buildResultError();	}		/**	 * 用户相关个人设置提取	 * @param params uid ouid	 * @return	 */	public static ResultResponse<UserPersonalSettingDTO> userFetchPersonalSettings(Map<?, ?> params){		ResultResponse<UserPersonalSettingDTO> response = null;		String jsonstring = CommonHttpApi.post(ApiUrlDefine.getApiUrl(ApiUrlDefine.Normal.UserPersonal.FetchPersonalSettings),params);		if(jsonstring != null){			try {				response = FunctionResultBuilder.buildUserPersonalSettingDTO(jsonstring);				return response;			} catch (JSONException e) {				e.printStackTrace();			}		}		return CommonBuilder.buildResultError();	}}